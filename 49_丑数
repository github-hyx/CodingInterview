把只包含质因子2、3和5的数称作丑数（Ugly Number）。例如6、8都是丑数，但14不是，因为它包含质因子7。 
习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第N个丑数。
/////////////////////////////////////////////////////////////
class Solution 
{
public:
    int GetUglyNumber_Solution(int index) 
    {
        if(index<=0)
            return 0;
        
        int* pUglyNumber=new int[index];
        pUglyNumber[0]=1;
        int next=1;
        int* p2=pUglyNumber;
        int* p3=pUglyNumber;
        int* p5=pUglyNumber;
        while(next<index)
        {
            pUglyNumber[next]=Min(*p2*2,*p3*3,*p5*5);
            while(*p2*2<=pUglyNumber[next])
                ++p2;
            while(*p3*3<=pUglyNumber[next])
                ++p3;
            while(*p5*5<=pUglyNumber[next])
                ++p5;
            
            ++next;
        }
        int result=pUglyNumber[index-1];
        delete[] pUglyNumber; 
        return result;
    }
    
    int Min(int number1,int number2,int number3)
        {
            int min=(number1<number2)?number1:number2;
            min=(min<number3)?min:number3;
            return min;
        }
};
///////////////////////////////////////////////////////////////////////////////////////////////总结
移动指针指向下一位注意不要加*
++p2，不是++*p2

//////////////////////////////////////////////////////////////////////////////////////////////牛客网参考解析
class Solution {
public://别人的代码就是精简，惭愧啊，继续学习。
    int GetUglyNumber_Solution(int index) {
        if (index < 7)return index;
        vector<int> res(index);
        res[0] = 1;
        int t2 = 0, t3 = 0, t5 = 0, i;
        for (i = 1; i < index; ++i)
        {
            res[i] = min(res[t2] * 2, min(res[t3] * 3, res[t5] * 5));
            if (res[i] == res[t2] * 2)t2++;
            if (res[i] == res[t3] * 3)t3++;
            if (res[i] == res[t5] * 5)t5++;
        }
        return res[index - 1];
    }
};

下面这样写会出现非法访问
        vector<int> res;
        res[0] = 1;
        
 应该要这么写，先规定好res的长度。
        vector<int> res(index);
        res[0] = 1;
 或者用push_back一个个加进去       
        vector<int> res;
        res.push_back(1);
        
///////////// “或者用push_back一个个加进去” 程序示例如下   
class Solution {
public://别人的代码就是精简，惭愧啊，继续学习。
    int GetUglyNumber_Solution(int index) {
        if (index < 7)return index;
        vector<int> res;
        res.push_back(1);
        int t2 = 0, t3 = 0, t5 = 0, i;
        for (i = 1; i < index; ++i)
        {
            res.push_back(min(res[t2] * 2, min(res[t3] * 3, res[t5] * 5)));
            if (res[i] == res[t2] * 2)t2++;
            if (res[i] == res[t3] * 3)t3++;
            if (res[i] == res[t5] * 5)t5++;
        }
        return res[index - 1];
    }
};
