汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，就是用字符串模拟这个指令的运算结果。
对于一个给定的字符序列S，请你把其循环左移K位后的序列输出。例如，字符序列S=”abcXYZdef”,要求输出循环左移3位后的结果，即“XYZdefabc”。是不是很简单？
OK，搞定它！
/////////////////////////////////////////////////////////////////////////
class Solution 
{
public:
    string LeftRotateString(string str, int n) 
    {
        int size=str.size();
        if(size<n)
            return "";
        int begin=0;
        int end=size-1;
        Reverse(str,0,n-1);
        Reverse(str,n,end);
        Reverse(str,0,end);
        return str;
    }
    void Reverse(string& str,int begin,int end)
    {
        while(begin<end)
        {
            swap(str[begin],str[end]);
            begin++;
            end--;
        }
    }
};
/////////////////////////////////////////////////////////////////////////总结



/////////////////////////////////////////////////////////////////////////牛客网参考解析
class Solution {
public:
    string LeftRotateString(string str, int n) {
        int len = str.length();
        if(len == 0) return "";
        n = n % len;
        str += str;
        return str.substr(n, len);
    }
};
